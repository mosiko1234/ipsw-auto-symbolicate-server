# IPSW Symbol Server Configuration - Airgap Deployment
# Uses pre-built Docker images and external S3 storage

DEPLOYMENT_TYPE=airgap
USE_S3_OPTIMIZED=y
USE_POSTGRES=y
USE_WEB_UI=y

# Service Ports (same as full profile)
WEB_UI_PORT=5001
API_PORT=8000
SYMBOL_PORT=3993
NGINX_PORT=80

# Airgap Docker Registry Configuration
AIRGAP_REGISTRY=your-registry.local:5000
VERSION=latest

# External S3 Configuration (Airgap Environment)
# For development/testing, fallback to local MinIO if airgap S3 not available
AIRGAP_S3_ENDPOINT=http://s3.internal.local:9000
S3_ENDPOINT=http://localhost:9000
S3_ACCESS_KEY=minioadmin
S3_SECRET_KEY=minioadmin
S3_BUCKET=ipsw
S3_USE_SSL=false
S3_VERIFY_SSL=false

# Performance Configuration (same as full profile)
CACHE_SIZE_GB=100
CLEANUP_AFTER_HOURS=24
MAX_CONCURRENT_DOWNLOADS=3

# PostgreSQL Configuration (same as full profile)
POSTGRES_DB=symbols
POSTGRES_USER=symbols_user
POSTGRES_PASSWORD=symbols_password

# Build Configuration for Image Creation
BUILD_DATE=
GIT_COMMIT=

# Instructions for Airgap Deployment:
# 1. Build images: ./scripts/build-airgap-images.sh
# 2. Save images: docker save localhost:5000/ipsw-symbol-server:latest localhost:5000/ipsw-api-server:latest localhost:5000/ipsw-nginx:latest | gzip > ipsw-images.tar.gz
# 3. Transfer to airgap environment
# 4. Load images: docker load < ipsw-images.tar.gz
# 5. Update AIRGAP_REGISTRY and AIRGAP_S3_ENDPOINT for your environment
# 6. Deploy: docker-compose --profile airgap up -d 