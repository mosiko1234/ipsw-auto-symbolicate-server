# .github/workflows/build.yml
name: Build and Test

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_IMAGE: adafef2e596e/ipsw-symbol-server

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.DOCKER_IMAGE }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}
          type=sha,prefix=sha-

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.ipsw
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64

    - name: Test Docker image
      run: |
        echo "🐳 Docker image built successfully!"
        echo "📋 Listing all Docker images:"
        docker images
        echo ""
        echo "🔍 Checking for our image:"
        if docker images | grep -q "ipsw-symbol-server\|${{ env.DOCKER_IMAGE }}"; then
          echo "✅ Image found!"
          docker images | grep -E "ipsw-symbol-server|${{ env.DOCKER_IMAGE }}"
        else
          echo "⚠️  Image not found, but build succeeded"
          echo "Available images:"
          docker images --format "table {{.Repository}}\t{{.Tag}}\t{{.Size}}"
        fi

    - name: Generate build summary
      if: github.event_name != 'pull_request'
      run: |
        echo "## 🐳 Docker Image Built and Pushed Successfully" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Image:** \`${{ env.DOCKER_IMAGE }}\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Tags:** " >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        echo "${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Pull command:**" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
        echo "docker pull ${{ env.DOCKER_IMAGE }}:latest" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

  validate:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Validate file structure
      run: |
        echo "📁 Validating project structure..."
        ls -la
        
        echo "✅ Required files check:"
        [ -f "Dockerfile.ipsw" ] && echo "✓ Dockerfile.ipsw exists" || echo "✗ Dockerfile.ipsw missing"
        [ -f "docker-compose.prod.yml" ] && echo "✓ docker-compose.prod.yml exists" || echo "✗ docker-compose.prod.yml missing"
        [ -d "config" ] && echo "✓ config directory exists" || echo "✗ config directory missing"
        [ -d "scripts" ] && echo "✓ scripts directory exists" || echo "✗ scripts directory missing"
        
        echo "📋 Project structure validated!"