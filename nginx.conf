events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Logging
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log  /var/log/nginx/access.log  main;
    error_log   /var/log/nginx/error.log warn;
    
    # Basic settings
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  65;
    types_hash_max_size 2048;
    client_max_body_size 10G;  # Allow large IPSW uploads
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;

    # Upstream definitions
    upstream api_backend {
        server host.docker.internal:8000;
    }
    
    upstream symbol_server_backend {
        server host.docker.internal:3993;
    }
    
    upstream web_ui_backend {
        server host.docker.internal:5001;
    }
    
    upstream minio_backend {
        server host.docker.internal:9000;  # MinIO runs on host
    }
    
    upstream minio_console_backend {
        server host.docker.internal:9001;  # MinIO console runs on host
    }

    # Main server block
    server {
        listen 80;
        server_name localhost ipsw-symbol-server.local;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
        
        # Root - redirect to Web UI
        location = / {
            return 302 /ui/;
        }
        
        # Main Web UI
        location /ui/ {
            proxy_pass http://web_ui_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
            
            # Handle WebSocket upgrades if needed
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
        
        # Main API - symbolication and management
        location /api/ {
            proxy_pass http://api_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
            
            # Increase timeouts for large file processing
            proxy_connect_timeout 300;
            proxy_send_timeout 300;
            proxy_read_timeout 300;
            send_timeout 300;
        }
        
        # Symbol Server API
        location /symbol-server/ {
            proxy_pass http://symbol_server_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
            
            # Increase timeouts for IPSW processing
            proxy_connect_timeout 600;
            proxy_send_timeout 600;
            proxy_read_timeout 600;
            send_timeout 600;
        }
        
        # S3 Storage Access (MinIO)
        location /s3/ {
            proxy_pass http://minio_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
            
            # Remove /s3 prefix when passing to MinIO
            rewrite ^/s3/(.*) /$1 break;
        }
        
        # S3 Management Console
        location /s3-console/ {
            proxy_pass http://minio_console_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
            
            # Handle WebSocket for console
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
        
        # Health checks and monitoring
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Service status page
        location /status {
            access_log off;
            default_type application/json;
            return 200 '{"status":"healthy","services":{"api":"http://localhost/api/health","symbol_server":"http://localhost/symbol-server/health","ui":"http://localhost/ui","s3":"http://localhost/s3/minio/health/live"},"timestamp":"$time_iso8601"}';
        }
        
        # Documentation endpoint
        location /docs {
            access_log off;
            default_type text/html;
            return 200 '<!DOCTYPE html>
<html>
<head>
    <title>IPSW Symbol Server - API Documentation</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 40px; }
        .endpoint { background: #f5f5f5; padding: 15px; margin: 10px 0; border-radius: 5px; }
        .method { color: #fff; padding: 3px 8px; border-radius: 3px; font-weight: bold; }
        .get { background: #61affe; }
        .post { background: #49cc90; }
        .delete { background: #f93e3e; }
        code { background: #f0f0f0; padding: 2px 4px; }
    </style>
</head>
<body>
    <h1>üçé IPSW Symbol Server - API Documentation</h1>
    
    <h2>üåê Main Services</h2>
    <div class="endpoint">
        <strong>Web UI:</strong> <a href="/ui/">http://localhost/ui/</a><br>
        <em>Main interface for crash log symbolication</em>
    </div>
    
    <h2>üîß API Endpoints</h2>
    
    <h3>üìã Symbolication</h3>
    <div class="endpoint">
        <span class="method post">POST</span> <code>/api/symbolicate</code><br>
        <em>Upload and symbolicate crash logs (multipart form with file)</em>
    </div>
    
    <h3>üîç Symbol Server</h3>
    <div class="endpoint">
        <span class="method get">GET</span> <code>/symbol-server/health</code><br>
        <em>Symbol server health check</em>
    </div>
    <div class="endpoint">
        <span class="method get">GET</span> <code>/symbol-server/stats</code><br>
        <em>Symbol server statistics</em>
    </div>
    <div class="endpoint">
        <span class="method get">GET</span> <code>/symbol-server/v1/disk-usage</code><br>
        <em>Disk usage and cleanup statistics</em>
    </div>
    <div class="endpoint">
        <span class="method post">POST</span> <code>/symbol-server/v1/cleanup</code><br>
        <em>Manual cleanup of IPSW files</em>
    </div>
    <div class="endpoint">
        <span class="method post">POST</span> <code>/symbol-server/v1/auto-scan?device_model=iPhone15,2&ios_version=18.5</code><br>
        <em>Manually trigger auto-scan for specific device</em>
    </div>
    
    <h3>üíæ S3 Storage</h3>
    <div class="endpoint">
        <span class="method get">GET</span> <code>/api/s3/list</code><br>
        <em>List available IPSW files</em>
    </div>
    <div class="endpoint">
        <span class="method get">GET</span> <code>/s3-console/</code><br>
        <em>MinIO management console</em>
    </div>
    
    <h3>üìä Monitoring</h3>
    <div class="endpoint">
        <span class="method get">GET</span> <code>/health</code><br>
        <em>Nginx health check</em>
    </div>
    <div class="endpoint">
        <span class="method get">GET</span> <code>/status</code><br>
        <em>All services status</em>
    </div>
    
    <h2>üöÄ Quick Start</h2>
    <pre>
# Symbolicate a crash log
curl -X POST "http://localhost/api/symbolicate" -F "file=@crash.ips"

# Check disk usage
curl "http://localhost/symbol-server/v1/disk-usage"

# Manual cleanup
curl -X POST "http://localhost/symbol-server/v1/cleanup"
    </pre>
    
</body>
</html>';
        }
        
        # Nginx status (if enabled)
        location /nginx-status {
            access_log off;
            allow 127.0.0.1;
            allow 172.16.0.0/12;  # Docker networks
            deny all;
            stub_status;
        }
    }
} 