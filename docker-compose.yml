# IPSW Symbol Server with Kernel Symbolication Support

services:
  postgres:
    image: postgres:15
    container_name: ipsw-postgres
    environment:
      - POSTGRES_DB=symbols
      - POSTGRES_USER=symbols_user
      - POSTGRES_PASSWORD=symbols_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init-symbols-db.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U symbols_user -d symbols"]
      interval: 30s
      timeout: 10s
      retries: 3
    profiles:
      - regular
      - airgap

  # MinIO S3 Storage (only for regular deployment)
  minio:
    image: minio/minio:latest
    container_name: ipsw-minio
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
      - MINIO_BUCKETS=ipsw
    volumes:
      - minio_data:/data
      - ./minio-init.sh:/minio-init.sh:ro
    ports:
      - "9000:9000"
      - "9001:9001"
    entrypoint: >
      sh -c "/usr/bin/docker-entrypoint.sh server /data --console-address ':9001' & sleep 5 && /bin/sh /minio-init.sh && wait"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
    profiles:
      - regular
      - airgap

  # Symbol Server - Regular deployment (with build)
  symbol-server:
    build:
      context: .
      dockerfile: docker/Dockerfile.symbol-server
    container_name: ipsw-symbol-server
    ports:
      - "${SYMBOL_PORT:-3993}:3993"
    environment:
      - S3_ENDPOINT=http://minio:9000
      - S3_ACCESS_KEY=minioadmin
      - S3_SECRET_KEY=minioadmin
      - S3_BUCKET=ipsw
      - S3_USE_SSL=false
      - S3_VERIFY_SSL=false
      - CACHE_SIZE_GB=${CACHE_SIZE_GB:-100}
      - CLEANUP_AFTER_HOURS=${CLEANUP_AFTER_HOURS:-24}
      - MAX_CONCURRENT_DOWNLOADS=${MAX_CONCURRENT_DOWNLOADS:-3}
      - DATABASE_URL=postgresql://${POSTGRES_USER:-symbols_user}:${POSTGRES_PASSWORD:-symbols_password}@postgres:5432/${POSTGRES_DB:-symbols}
      - KERNEL_SIGS_DIR=/app/data/symbolicator/kernel
    volumes:
      - ./data/cache:/app/data/cache
      - ./data/symbols:/app/data/symbols
      - ./data/downloads:/app/data/downloads
      - ./data/temp:/app/data/temp
      - ./signatures:/app/data/signatures:ro
      - ./data/symbolicator:/app/data/symbolicator:ro
    tmpfs:
      - /app/data/processing:size=2G,noexec,nosuid,nodev
    privileged: true
    devices:
      - /dev/fuse:/dev/fuse
    cap_add:
      - SYS_ADMIN
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3993/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    profiles:
      - regular
      - airgap

  # Symbol Server - Airgap deployment (pre-built image)
  symbol-server-airgap:
    image: ${AIRGAP_REGISTRY:-localhost:5000}/ipsw-symbol-server:${VERSION:-latest}
    container_name: ipsw-symbol-server
    ports:
      - "${SYMBOL_PORT:-3993}:3993"
    environment:
      - S3_ENDPOINT=http://minio:9000
      - S3_ACCESS_KEY=minioadmin
      - S3_SECRET_KEY=minioadmin
      - S3_BUCKET=ipsw
      - S3_USE_SSL=false
      - S3_VERIFY_SSL=false
      - CACHE_SIZE_GB=${CACHE_SIZE_GB:-100}
      - CLEANUP_AFTER_HOURS=${CLEANUP_AFTER_HOURS:-24}
      - MAX_CONCURRENT_DOWNLOADS=${MAX_CONCURRENT_DOWNLOADS:-3}
      - DATABASE_URL=postgresql://${POSTGRES_USER:-symbols_user}:${POSTGRES_PASSWORD:-symbols_password}@postgres:5432/${POSTGRES_DB:-symbols}
      - KERNEL_SIGS_DIR=/app/data/symbolicator/kernel
    volumes:
      - ./data/cache:/app/data/cache
      - ./data/symbols:/app/data/symbols
      - ./data/downloads:/app/data/downloads
      - ./data/temp:/app/data/temp
      - ./signatures:/app/data/signatures:ro
      - ./data/symbolicator:/app/data/symbolicator:ro
    tmpfs:
      - /app/data/processing:size=2G,noexec,nosuid,nodev
    privileged: true
    devices:
      - /dev/fuse:/dev/fuse
    cap_add:
      - SYS_ADMIN
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3993/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    profiles:
      - airgap

  # API Server - Regular deployment (with build)
  api-server:
    build:
      context: .
      dockerfile: docker/Dockerfile.api
    container_name: ipsw-api-server
    ports:
      - "8000:8000"
    environment:
      - DATA_DIR=/app/data
      - SYMBOL_SERVER_URL=http://ipsw-symbol-server:3993
      - S3_ENDPOINT=http://minio:9000
      - S3_BUCKET=ipsw
      - S3_ACCESS_KEY=minioadmin
      - S3_SECRET_KEY=minioadmin
      # File Watcher Configuration
      - S3_CHECK_INTERVAL=300         # Check every 5 minutes
      - AUTO_SCAN_COOLDOWN=600        # 10 minutes cooldown between auto-scans
      - FILE_WATCHER_ENABLED=true     # Enable auto-detection
    volumes:
      - ./data/api:/app/data
    depends_on:
      - minio
      - symbol-server
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    profiles:
      - regular
      - airgap

  # API Server - Airgap deployment (pre-built image)
  api-server-airgap:
    image: ${AIRGAP_REGISTRY:-localhost:5000}/ipsw-api-server:${VERSION:-latest}
    container_name: ipsw-api-server
    ports:
      - "${API_PORT:-8000}:8000"
    environment:
      - SYMBOL_SERVER_URL=http://symbol-server-airgap:3993
      - DATABASE_URL=postgresql://symbols_user:symbols_password@postgres:5432/symbols
      - S3_ENDPOINT=http://minio:9000
      - S3_ACCESS_KEY=minioadmin
      - S3_SECRET_KEY=minioadmin
      - S3_BUCKET=ipsw
      - S3_USE_SSL=false
      - CACHE_SIZE_GB=${CACHE_SIZE_GB:-100}
    volumes:
      - ./data:/app/data
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    depends_on:
      symbol-server-airgap:
        condition: service_healthy
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    profiles:
      - airgap

  # Nginx - Regular deployment (with build)
  nginx:
    build:
      context: .
      dockerfile: docker/Dockerfile.nginx
    container_name: ipsw-nginx
    ports:
      - "${NGINX_PORT:-80}:80"
    restart: unless-stopped
    depends_on:
      api-server:
        condition: service_healthy
      symbol-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - default
    extra_hosts:
      - "host.docker.internal:host-gateway"
    profiles:
      - regular
      - airgap

  # Nginx - Airgap deployment (pre-built image)
  nginx-airgap:
    image: ${AIRGAP_REGISTRY:-localhost:5000}/ipsw-nginx:${VERSION:-latest}
    container_name: ipsw-nginx
    ports:
      - "${NGINX_PORT:-80}:80"
    restart: unless-stopped
    depends_on:
      api-server-airgap:
        condition: service_healthy
      symbol-server-airgap:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - default
    extra_hosts:
      - "host.docker.internal:host-gateway"
    profiles:
      - airgap

volumes:
  postgres_data:
    driver: local
  minio_data:
    driver: local 