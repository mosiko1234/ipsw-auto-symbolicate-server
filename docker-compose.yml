version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: ipsw-postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MinIO S3 Storage (only for regular deployment)
  minio:
    image: minio/minio:latest
    container_name: ipsw-minio
    environment:
      - MINIO_ROOT_USER=${S3_ACCESS_KEY:-minioadmin}
      - MINIO_ROOT_PASSWORD=${S3_SECRET_KEY:-minioadmin}
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
    profiles:
      - regular
      - full

  # Symbol Server - Regular deployment (with build)
  symbol-server:
    build:
      context: .
      dockerfile: Dockerfile.symbol-server-s3
    container_name: ipsw-symbol-server
    ports:
      - "${SYMBOL_PORT}:3993"
    environment:
      - S3_ENDPOINT=${S3_ENDPOINT}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_BUCKET=${S3_BUCKET}
      - S3_USE_SSL=${S3_USE_SSL}
      - S3_VERIFY_SSL=${S3_VERIFY_SSL}
      - CACHE_SIZE_GB=${CACHE_SIZE_GB}
      - CLEANUP_AFTER_HOURS=${CLEANUP_AFTER_HOURS}
      - MAX_CONCURRENT_DOWNLOADS=${MAX_CONCURRENT_DOWNLOADS}
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
    volumes:
      - ./data/cache:/app/data/cache
      - ./data/symbols:/app/data/symbols
      - ./data/downloads:/app/data/downloads
      - ./data/temp:/app/data/temp
      - ./signatures:/app/data/signatures:ro
    tmpfs:
      - /app/data/processing:size=2G,noexec,nosuid,nodev
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3993/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    profiles:
      - regular
      - full

  # Symbol Server - Airgap deployment (pre-built image)
  symbol-server-airgap:
    image: ${AIRGAP_REGISTRY:-localhost:5000}/ipsw-symbol-server:${VERSION:-latest}
    container_name: ipsw-symbol-server
    ports:
      - "${SYMBOL_PORT}:3993"
    environment:
      - S3_ENDPOINT=${AIRGAP_S3_ENDPOINT}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_BUCKET=${S3_BUCKET}
      - S3_USE_SSL=${S3_USE_SSL:-false}
      - S3_VERIFY_SSL=${S3_VERIFY_SSL:-false}
      - CACHE_SIZE_GB=${CACHE_SIZE_GB}
      - CLEANUP_AFTER_HOURS=${CLEANUP_AFTER_HOURS}
      - MAX_CONCURRENT_DOWNLOADS=${MAX_CONCURRENT_DOWNLOADS}
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
    volumes:
      - ./data/cache:/app/data/cache
      - ./data/symbols:/app/data/symbols
      - ./data/downloads:/app/data/downloads
      - ./data/temp:/app/data/temp
      - ./signatures:/app/data/signatures:ro
    tmpfs:
      - /app/data/processing:size=2G,noexec,nosuid,nodev
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3993/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    profiles:
      - airgap

  # API Server - Regular deployment (with build)
  api-server:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: ipsw-api-server
    ports:
      - "${API_PORT}:8000"
    environment:
      - SYMBOL_SERVER_URL=http://symbol-server:3993
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - S3_ENDPOINT=${S3_ENDPOINT}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_BUCKET=${S3_BUCKET}
      - S3_USE_SSL=${S3_USE_SSL}
      - CACHE_SIZE_GB=${CACHE_SIZE_GB}
    volumes:
      - ./data:/app/data
    restart: unless-stopped
    depends_on:
      symbol-server:
        condition: service_healthy
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    profiles:
      - regular
      - full

  # API Server - Airgap deployment (pre-built image)
  api-server-airgap:
    image: ${AIRGAP_REGISTRY:-localhost:5000}/ipsw-api-server:${VERSION:-latest}
    container_name: ipsw-api-server
    ports:
      - "${API_PORT}:8000"
    environment:
      - SYMBOL_SERVER_URL=http://symbol-server:3993
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - S3_ENDPOINT=${AIRGAP_S3_ENDPOINT}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_BUCKET=${S3_BUCKET}
      - S3_USE_SSL=${S3_USE_SSL:-false}
      - CACHE_SIZE_GB=${CACHE_SIZE_GB}
    volumes:
      - ./data:/app/data
    restart: unless-stopped
    depends_on:
      symbol-server-airgap:
        condition: service_healthy
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    profiles:
      - airgap

  # Web UI - Regular deployment (with build)
  web-ui:
    build:
      context: .
      dockerfile: Dockerfile.webui
    container_name: ipsw-web-ui
    ports:
      - "${WEB_UI_PORT}:5001"
    environment:
      - API_SERVER_URL=http://api-server:8000
      - SYMBOL_SERVER_URL=http://symbol-server:3993
    volumes:
      - ./templates:/app/templates
      - ./static:/app/static
    restart: unless-stopped
    depends_on:
      api-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/"]
      interval: 30s
      timeout: 10s
      retries: 3
    profiles:
      - regular
      - full

  # Web UI - Airgap deployment (pre-built image)
  web-ui-airgap:
    image: ${AIRGAP_REGISTRY:-localhost:5000}/ipsw-web-ui:${VERSION:-latest}
    container_name: ipsw-web-ui
    ports:
      - "${WEB_UI_PORT}:5001"
    environment:
      - API_SERVER_URL=http://api-server:8000
      - SYMBOL_SERVER_URL=http://symbol-server:3993
    volumes:
      - ./templates:/app/templates
      - ./static:/app/static
    restart: unless-stopped
    depends_on:
      api-server-airgap:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/"]
      interval: 30s
      timeout: 10s
      retries: 3
    profiles:
      - airgap

  # Nginx - Regular deployment (with build)
  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    container_name: ipsw-nginx
    ports:
      - "${NGINX_PORT:-80}:80"
    restart: unless-stopped
    depends_on:
      api-server:
        condition: service_healthy
      symbol-server:
        condition: service_healthy
      web-ui:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - default
    extra_hosts:
      - "host.docker.internal:host-gateway"
    profiles:
      - regular
      - full

  # Nginx - Airgap deployment (pre-built image)
  nginx-airgap:
    image: ${AIRGAP_REGISTRY:-localhost:5000}/ipsw-nginx:${VERSION:-latest}
    container_name: ipsw-nginx
    ports:
      - "${NGINX_PORT:-80}:80"
    restart: unless-stopped
    depends_on:
      api-server-airgap:
        condition: service_healthy
      symbol-server-airgap:
        condition: service_healthy
      web-ui-airgap:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - default
    extra_hosts:
      - "host.docker.internal:host-gateway"
    profiles:
      - airgap

volumes:
  postgres_data:
    driver: local
  minio_data:
    driver: local
